-- Criação das tabelas
CREATE TABLE tb_abastecimento (
    custo_total FLOAT(53) NOT NULL,
    litros FLOAT(53) NOT NULL,
    odômetro INTEGER,
    preço_por_litro FLOAT(53),
    hora_abastecimento TIMESTAMP(6) NOT NULL,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    motorista_id BIGINT,
    posto_de_gasolina BIGINT,
    rota_id BIGINT,
    veiculo_id BIGINT NOT NULL,
    observações TEXT,
    PRIMARY KEY (id)
);

CREATE TABLE tb_ajudantes (
    codsetor INTEGER,
    matricula INTEGER,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(255),
    fone VARCHAR(255),
    nome VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE tb_cliente (
    codcli INTEGER,
    latitude FLOAT(53),
    longitude FLOAT(53),
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    cliente VARCHAR(255),
    endereco VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE tb_custos_pecas (
    custo FLOAT(53),
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    manutencao_id BIGINT,
    nome_peca VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE tb_estabelecimento (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    address VARCHAR(255),
    city VARCHAR(255),
    name VARCHAR(255),
    state VARCHAR(255),
    type VARCHAR(255) CHECK (type IN ('POSTO_COMBUSTIVEL','RESTAURANTE','HOTEL','LOJA','OUTRO')),
    PRIMARY KEY (id)
);

CREATE TABLE tb_filial (
    codigo INTEGER,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    cnpj VARCHAR(255),
    razao_social VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE tb_manutencao (
    aprovado BOOLEAN,
    custo_total FLOAT(53),
    data_manutencao DATE,
    data_proxima_manutencao DATE,
    nivel_combustivel FLOAT(53),
    odometro INTEGER,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    veiculo_id BIGINT NOT NULL,
    comentarios_aprovacao VARCHAR(255),
    descricao VARCHAR(255),
    numero_nota_fiscal VARCHAR(255),
    prestador_servico VARCHAR(255),
    relatorio_manutencao VARCHAR(255),
    responsavel VARCHAR(255),
    status VARCHAR(255) CHECK (status IN ('PENDENTE','CONCLUIDA','EM_ANDAMENTO','CANCELADA')),
    tipo_manutencao VARCHAR(255) CHECK (tipo_manutencao IN ('PREVENTIVA','CORRETIVA')),
    PRIMARY KEY (id)
);

CREATE TABLE tb_motorista (
    matricula INTEGER NOT NULL UNIQUE,
    status BOOLEAN,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    usuario_id BIGINT,
    validadecnh TIMESTAMP(6),
    categoriacnh VARCHAR(255),
    cnh VARCHAR(255),
    disponibilidades VARCHAR(255) CHECK (disponibilidades IN ('AVAILABLE','IN_LOAD','UNAVAILABLE')),
    nome VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE tb_role (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    authority VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE tb_rota_ajudantes (
    rota_id BIGINT NOT NULL,
    usuario_id BIGINT NOT NULL
);

CREATE TABLE tb_rota_cliente (
    cliente_id BIGINT NOT NULL,
    rota_id BIGINT NOT NULL
);

CREATE TABLE tb_rota_parada (
    custo FLOAT(53) NOT NULL,
    estabelecimento_id BIGINT,
    hora_fim TIMESTAMP(6),
    hora_inicio TIMESTAMP(6),
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    rota_id BIGINT NOT NULL,
    tipo_parada VARCHAR(255) NOT NULL CHECK (tipo_parada IN ('ALIMENTACAO','PERNOITE','ABASTECIMENTO')),
    PRIMARY KEY (id)
);

CREATE TABLE tb_route (
    carregamento INTEGER,
    data_inicial DATE,
    data_termino DATE,
    km_final INTEGER,
    km_inicial INTEGER,
    km_total INTEGER,
    mdfe INTEGER,
    peso FLOAT(53),
    situacao_mdfe INTEGER,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    motorista_id BIGINT,
    total_clientes BIGINT,
    veiculo_id BIGINT,
    numnotas VARCHAR(255),
    status VARCHAR(255) CHECK (status IN ('PLANEJADA','EM_ANDAMENTO','CONCLUIDA','CANCELADA')),
    PRIMARY KEY (id)
);

CREATE TABLE tb_user_role (
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    PRIMARY KEY (role_id, user_id)
);

CREATE TABLE tb_usuario (
    birth_date DATE,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    email VARCHAR(255) UNIQUE,
    name VARCHAR(255),
    password VARCHAR(255),
    phone VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE tb_veiculo (
    codveiculo INTEGER,
    pesocargakg INTEGER,
    qteixos INTEGER,
    qtlitros FLOAT(53),
    qtrodas INTEGER,
    status BOOLEAN,
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    combustivel VARCHAR(255),
    cor VARCHAR(255),
    descricao VARCHAR(255),
    disponibilidades VARCHAR(255) CHECK (disponibilidades IN ('AVAILABLE','IN_LOAD','UNAVAILABLE')),
    marca VARCHAR(255),
    nomeproprietario VARCHAR(255),
    placa VARCHAR(255),
    tipo_veiculo VARCHAR(255),
    PRIMARY KEY (id)
);

-- Relacionamentos (FKs)
ALTER TABLE tb_abastecimento ADD CONSTRAINT FK_abastecimento_motorista FOREIGN KEY (motorista_id) REFERENCES tb_motorista;
ALTER TABLE tb_abastecimento ADD CONSTRAINT FK_abastecimento_posto FOREIGN KEY (posto_de_gasolina) REFERENCES tb_estabelecimento;
ALTER TABLE tb_abastecimento ADD CONSTRAINT FK_abastecimento_rota FOREIGN KEY (rota_id) REFERENCES tb_route;
ALTER TABLE tb_abastecimento ADD CONSTRAINT FK_abastecimento_veiculo FOREIGN KEY (veiculo_id) REFERENCES tb_veiculo;

ALTER TABLE tb_custos_pecas ADD CONSTRAINT FK_custos_pecas_manutencao FOREIGN KEY (manutencao_id) REFERENCES tb_manutencao;
ALTER TABLE tb_manutencao ADD CONSTRAINT FK_manutencao_veiculo FOREIGN KEY (veiculo_id) REFERENCES tb_veiculo;

ALTER TABLE tb_motorista ADD CONSTRAINT FK_motorista_usuario FOREIGN KEY (usuario_id) REFERENCES tb_usuario;

ALTER TABLE tb_rota_ajudantes ADD CONSTRAINT FK_rota_ajudantes_usuario FOREIGN KEY (usuario_id) REFERENCES tb_ajudantes;
ALTER TABLE tb_rota_ajudantes ADD CONSTRAINT FK_rota_ajudantes_rota FOREIGN KEY (rota_id) REFERENCES tb_route;

ALTER TABLE tb_rota_cliente ADD CONSTRAINT FK_rota_cliente_cliente FOREIGN KEY (cliente_id) REFERENCES tb_cliente;
ALTER TABLE tb_rota_cliente ADD CONSTRAINT FK_rota_cliente_rota FOREIGN KEY (rota_id) REFERENCES tb_route;

ALTER TABLE tb_rota_parada ADD CONSTRAINT FK_rota_parada_estabelecimento FOREIGN KEY (estabelecimento_id) REFERENCES tb_estabelecimento;
ALTER TABLE tb_rota_parada ADD CONSTRAINT FK_rota_parada_rota FOREIGN KEY (rota_id) REFERENCES tb_route;

ALTER TABLE tb_route ADD CONSTRAINT FK_route_motorista FOREIGN KEY (motorista_id) REFERENCES tb_motorista;
ALTER TABLE tb_route ADD CONSTRAINT FK_route_veiculo FOREIGN KEY (veiculo_id) REFERENCES tb_veiculo;

ALTER TABLE tb_user_role ADD CONSTRAINT FK_user_role_role FOREIGN KEY (role_id) REFERENCES tb_role;
ALTER TABLE tb_user_role ADD CONSTRAINT FK_user_role_user FOREIGN KEY (user_id) REFERENCES tb_usuario;

-- Inserção de roles
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_role (authority) VALUES ('ROLE_DRIVER');
INSERT INTO tb_role (authority) VALUES ('ROLE_ANALYST');
INSERT INTO tb_role (authority) VALUES ('ROLE_MANAGER');
